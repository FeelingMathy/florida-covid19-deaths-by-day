#!/usr/bin/python3

import sys, os, datetime, json, requests
import pandas as pd

fprev = list(filter(lambda x: x.endswith('.csv'), sorted(os.listdir('.'))))[-1]
fprev_content = open(fprev).read()
url = "https://services1.arcgis.com/CY1LXxl9zlJeBuRZ/ArcGIS/rest/services/Florida_COVID_19_Deaths_by_Day/FeatureServer/0/query?where=ObjectId>0&objectIds=&time=&resultType=standard&outFields=*&returnIdsOnly=false&returnUniqueIdsOnly=false&returnCountOnly=false&returnDistinctValues=false&cacheHint=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&having=&resultOffset=&resultRecordCount=&sqlFormat=none&f=pjson&token="
# User-Agent spoofing is required, if we use the default ("python-requests/x.x.x") the server returns
# an empty 'features'!
rows = requests.get(url, headers={'User-Agent': 'curl/7.64.0'}).json()['features']
df = pd.DataFrame([row['attributes'] for row in rows])
#df['Date'] = pd.to_datetime(df.Date, unit='ms')
tstamp = datetime.datetime.now().strftime('%Y%m%d')
fnew = f'deathsbydateexport_{tstamp}.csv'
df.to_csv(fnew, index=False)
if fprev_content == open(fnew).read():
    print('No updated Florida_COVID_19_Deaths_by_Day dataset')
    # We could be overwriting the same file (if the script is run multiple times
    # per day), so only delete what we just downloaded if the filename was different
    if fnew != fprev:
        os.unlink(fnew)
    sys.exit(1)
else:
    print('Found updated Florida_COVID_19_Deaths_by_Day dataset')
    sys.exit(0)
